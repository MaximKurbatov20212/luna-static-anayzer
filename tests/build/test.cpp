#include "ucenv.h"

BlockRetStatus block_0(CF &);
BlockRetStatus block_1(CF &);
BlockRetStatus block_2(CF &);
BlockRetStatus block_3(CF &);
BlockRetStatus block_4(CF &);
BlockRetStatus block_5(CF &);
BlockRetStatus block_6(CF &);
BlockRetStatus block_7(CF &);
BlockRetStatus block_8(CF &);
BlockRetStatus block_9(CF &);
BlockRetStatus block_10(CF &);
BlockRetStatus block_11(CF &);
BlockRetStatus block_12(CF &);
BlockRetStatus block_13(CF &);
BlockRetStatus block_14(CF &);
BlockRetStatus block_15(CF &);
BlockRetStatus block_16(CF &);
BlockRetStatus block_17(CF &);
BlockRetStatus block_18(CF &);
BlockRetStatus block_19(CF &);
BlockRetStatus block_20(CF &);
BlockRetStatus block_21(CF &);
BlockRetStatus block_22(CF &);
BlockRetStatus block_23(CF &);
BlockRetStatus block_24(CF &);
BlockRetStatus block_25(CF &);
BlockRetStatus block_26(CF &);
BlockRetStatus block_27(CF &);
BlockRetStatus block_28(CF &);
BlockRetStatus block_29(CF &);
BlockRetStatus block_30(CF &);
BlockRetStatus block_31(CF &);
BlockRetStatus block_32(CF &);
BlockRetStatus block_33(CF &);
BlockRetStatus block_34(CF &);
BlockRetStatus block_35(CF &);
BlockRetStatus block_36(CF &);
BlockRetStatus block_37(CF &);
BlockRetStatus block_38(CF &);
BlockRetStatus block_39(CF &);
BlockRetStatus block_40(CF &);
BlockRetStatus block_41(CF &);
BlockRetStatus block_42(CF &);
BlockRetStatus block_43(CF &);
BlockRetStatus block_44(CF &);
BlockRetStatus block_45(CF &);
BlockRetStatus block_46(CF &);
BlockRetStatus block_47(CF &);
BlockRetStatus block_48(CF &);
BlockRetStatus block_49(CF &);
BlockRetStatus block_50(CF &);
BlockRetStatus block_51(CF &);
BlockRetStatus block_52(CF &);
BlockRetStatus block_53(CF &);
BlockRetStatus block_54(CF &);
BlockRetStatus block_55(CF &);
BlockRetStatus block_56(CF &);
BlockRetStatus block_57(CF &);
BlockRetStatus block_58(CF &);
BlockRetStatus block_59(CF &);
BlockRetStatus block_60(CF &);
BlockRetStatus block_61(CF &);
BlockRetStatus block_62(CF &);
BlockRetStatus block_63(CF &);
BlockRetStatus block_64(CF &);
BlockRetStatus block_65(CF &);
BlockRetStatus block_66(CF &);
BlockRetStatus block_67(CF &);
BlockRetStatus block_68(CF &);
BlockRetStatus block_69(CF &);
BlockRetStatus block_70(CF &);
BlockRetStatus block_71(CF &);
BlockRetStatus block_72(CF &);
BlockRetStatus block_73(CF &);
BlockRetStatus block_74(CF &);
BlockRetStatus block_75(CF &);
BlockRetStatus block_76(CF &);
BlockRetStatus block_77(CF &);
BlockRetStatus block_78(CF &);
BlockRetStatus block_79(CF &);
BlockRetStatus block_80(CF &);
BlockRetStatus block_81(CF &);
BlockRetStatus block_82(CF &);
BlockRetStatus block_83(CF &);
BlockRetStatus block_84(CF &);
BlockRetStatus block_85(CF &);
BlockRetStatus block_86(CF &);
BlockRetStatus block_87(CF &);
BlockRetStatus block_88(CF &);
BlockRetStatus block_89(CF &);
BlockRetStatus block_90(CF &);
BlockRetStatus block_91(CF &);
BlockRetStatus block_92(CF &);
BlockRetStatus block_93(CF &);
BlockRetStatus block_94(CF &);
BlockRetStatus block_95(CF &);
BlockRetStatus block_96(CF &);
BlockRetStatus block_97(CF &);
BlockRetStatus block_98(CF &);
BlockRetStatus block_99(CF &);
BlockRetStatus block_100(CF &);
BlockRetStatus block_101(CF &);
BlockRetStatus block_102(CF &);
BlockRetStatus block_103(CF &);
BlockRetStatus block_104(CF &);
BlockRetStatus block_105(CF &);
BlockRetStatus block_106(CF &);
BlockRetStatus block_107(CF &);
BlockRetStatus block_108(CF &);
BlockRetStatus block_109(CF &);
BlockRetStatus block_110(CF &);
BlockRetStatus block_111(CF &);
BlockRetStatus block_112(CF &);
BlockRetStatus block_113(CF &);
BlockRetStatus block_114(CF &);
BlockRetStatus block_115(CF &);
BlockRetStatus block_116(CF &);
BlockRetStatus block_117(CF &);
BlockRetStatus block_118(CF &);
BlockRetStatus block_119(CF &);
BlockRetStatus block_120(CF &);
BlockRetStatus block_121(CF &);
BlockRetStatus block_122(CF &);
BlockRetStatus block_123(CF &);
BlockRetStatus block_124(CF &);
BlockRetStatus block_125(CF &);
BlockRetStatus block_126(CF &);
BlockRetStatus block_127(CF &);
BlockRetStatus block_128(CF &);
BlockRetStatus block_129(CF &);
BlockRetStatus block_130(CF &);
BlockRetStatus block_131(CF &);
BlockRetStatus block_132(CF &);
BlockRetStatus block_133(CF &);
BlockRetStatus block_134(CF &);
BlockRetStatus block_135(CF &);
BlockRetStatus block_136(CF &);
BlockRetStatus block_137(CF &);
BlockRetStatus block_138(CF &);
BlockRetStatus block_139(CF &);
BlockRetStatus block_140(CF &);
BlockRetStatus block_141(CF &);
BlockRetStatus block_142(CF &);
BlockRetStatus block_143(CF &);
BlockRetStatus block_144(CF &);
BlockRetStatus block_145(CF &);
BlockRetStatus block_146(CF &);
BlockRetStatus block_147(CF &);
BlockRetStatus block_148(CF &);
BlockRetStatus block_149(CF &);
BlockRetStatus block_150(CF &);
BlockRetStatus block_151(CF &);
BlockRetStatus block_152(CF &);
BlockRetStatus block_153(CF &);
BlockRetStatus block_154(CF &);
BlockRetStatus block_155(CF &);
BlockRetStatus block_156(CF &);
BlockRetStatus block_157(CF &);
BlockRetStatus block_158(CF &);
BlockRetStatus block_159(CF &);
BlockRetStatus block_160(CF &);
BlockRetStatus block_161(CF &);
BlockRetStatus block_162(CF &);
BlockRetStatus block_163(CF &);
BlockRetStatus block_164(CF &);
BlockRetStatus block_165(CF &);
BlockRetStatus block_166(CF &);
BlockRetStatus block_167(CF &);
BlockRetStatus block_168(CF &);
BlockRetStatus block_169(CF &);
BlockRetStatus block_170(CF &);
BlockRetStatus block_171(CF &);
BlockRetStatus block_172(CF &);
BlockRetStatus block_173(CF &);
BlockRetStatus block_174(CF &);
BlockRetStatus block_175(CF &);
BlockRetStatus block_176(CF &);
BlockRetStatus block_177(CF &);
BlockRetStatus block_178(CF &);
BlockRetStatus block_179(CF &);
BlockRetStatus block_180(CF &);
BlockRetStatus block_181(CF &);
BlockRetStatus block_182(CF &);
BlockRetStatus block_183(CF &);
BlockRetStatus block_184(CF &);
BlockRetStatus block_185(CF &);
BlockRetStatus block_186(CF &);
BlockRetStatus block_187(CF &);
BlockRetStatus block_188(CF &);
BlockRetStatus block_189(CF &);
BlockRetStatus block_190(CF &);
BlockRetStatus block_191(CF &);
BlockRetStatus block_192(CF &);
BlockRetStatus block_193(CF &);
BlockRetStatus block_194(CF &);
BlockRetStatus block_195(CF &);
BlockRetStatus block_196(CF &);
BlockRetStatus block_197(CF &);
BlockRetStatus block_198(CF &);
BlockRetStatus block_199(CF &);
BlockRetStatus block_200(CF &);
BlockRetStatus block_201(CF &);
BlockRetStatus block_202(CF &);
BlockRetStatus block_203(CF &);
BlockRetStatus block_204(CF &);
BlockRetStatus block_205(CF &);
BlockRetStatus block_206(CF &);
BlockRetStatus block_207(CF &);
BlockRetStatus block_208(CF &);
BlockRetStatus block_209(CF &);
BlockRetStatus block_210(CF &);
BlockRetStatus block_211(CF &);
BlockRetStatus block_212(CF &);
BlockRetStatus block_213(CF &);
BlockRetStatus block_214(CF &);
BlockRetStatus block_215(CF &);
BlockRetStatus block_216(CF &);
BlockRetStatus block_217(CF &);
BlockRetStatus block_218(CF &);
BlockRetStatus block_219(CF &);
BlockRetStatus block_220(CF &);
BlockRetStatus block_221(CF &);
BlockRetStatus block_222(CF &);
BlockRetStatus block_223(CF &);
BlockRetStatus block_224(CF &);
BlockRetStatus block_225(CF &);
BlockRetStatus block_226(CF &);
BlockRetStatus block_227(CF &);
BlockRetStatus block_228(CF &);
BlockRetStatus block_229(CF &);
BlockRetStatus block_230(CF &);
BlockRetStatus block_231(CF &);
BlockRetStatus block_232(CF &);
BlockRetStatus block_233(CF &);
BlockRetStatus block_234(CF &);
BlockRetStatus block_235(CF &);
BlockRetStatus block_236(CF &);
BlockRetStatus block_237(CF &);
BlockRetStatus block_238(CF &);
BlockRetStatus block_239(CF &);
BlockRetStatus block_240(CF &);
BlockRetStatus block_241(CF &);
BlockRetStatus block_242(CF &);
BlockRetStatus block_243(CF &);
BlockRetStatus block_244(CF &);
BlockRetStatus block_245(CF &);
BlockRetStatus block_246(CF &);
BlockRetStatus block_247(CF &);
BlockRetStatus block_248(CF &);
BlockRetStatus block_249(CF &);
BlockRetStatus block_250(CF &);
BlockRetStatus block_251(CF &);
BlockRetStatus block_252(CF &);
BlockRetStatus block_253(CF &);
BlockRetStatus block_254(CF &);
BlockRetStatus block_255(CF &);
BlockRetStatus block_256(CF &);
BlockRetStatus block_257(CF &);
BlockRetStatus block_258(CF &);
BlockRetStatus block_259(CF &);
BlockRetStatus block_260(CF &);
BlockRetStatus block_261(CF &);
BlockRetStatus block_262(CF &);
BlockRetStatus block_263(CF &);
BlockRetStatus block_264(CF &);
BlockRetStatus block_265(CF &);
BlockRetStatus block_266(CF &);
BlockRetStatus block_267(CF &);
BlockRetStatus block_268(CF &);
BlockRetStatus block_269(CF &);
BlockRetStatus block_270(CF &);
BlockRetStatus block_271(CF &);
BlockRetStatus block_272(CF &);
BlockRetStatus block_273(CF &);
BlockRetStatus block_274(CF &);
BlockRetStatus block_275(CF &);
BlockRetStatus block_276(CF &);
BlockRetStatus block_277(CF &);
BlockRetStatus block_278(CF &);
BlockRetStatus block_279(CF &);
BlockRetStatus block_280(CF &);
BlockRetStatus block_281(CF &);
BlockRetStatus block_282(CF &);
BlockRetStatus block_283(CF &);
BlockRetStatus block_284(CF &);
BlockRetStatus block_285(CF &);
BlockRetStatus block_286(CF &);
BlockRetStatus block_287(CF &);
BlockRetStatus block_288(CF &);
BlockRetStatus block_289(CF &);
BlockRetStatus block_290(CF &);
BlockRetStatus block_291(CF &);
BlockRetStatus block_292(CF &);
BlockRetStatus block_293(CF &);
BlockRetStatus block_294(CF &);
BlockRetStatus block_295(CF &);
BlockRetStatus block_296(CF &);
BlockRetStatus block_297(CF &);
BlockRetStatus block_298(CF &);
BlockRetStatus block_299(CF &);
BlockRetStatus block_300(CF &);
BlockRetStatus block_301(CF &);
BlockRetStatus block_302(CF &);
BlockRetStatus block_303(CF &);
BlockRetStatus block_304(CF &);
BlockRetStatus block_305(CF &);
BlockRetStatus block_306(CF &);
BlockRetStatus block_307(CF &);
BlockRetStatus block_308(CF &);
BlockRetStatus block_309(CF &);
BlockRetStatus block_310(CF &);
BlockRetStatus block_311(CF &);
BlockRetStatus block_312(CF &);
BlockRetStatus block_313(CF &);
BlockRetStatus block_314(CF &);
BlockRetStatus block_315(CF &);
BlockRetStatus block_316(CF &);
BlockRetStatus block_317(CF &);
BlockRetStatus block_318(CF &);
BlockRetStatus block_319(CF &);
BlockRetStatus block_320(CF &);
BlockRetStatus block_321(CF &);
BlockRetStatus block_322(CF &);
BlockRetStatus block_323(CF &);
BlockRetStatus block_324(CF &);
BlockRetStatus block_325(CF &);
BlockRetStatus block_326(CF &);
BlockRetStatus block_327(CF &);
BlockRetStatus block_328(CF &);
BlockRetStatus block_329(CF &);
BlockRetStatus block_330(CF &);
BlockRetStatus block_331(CF &);
BlockRetStatus block_332(CF &);
BlockRetStatus block_333(CF &);
BlockRetStatus block_334(CF &);
BlockRetStatus block_335(CF &);
BlockRetStatus block_336(CF &);
BlockRetStatus block_337(CF &);
BlockRetStatus block_338(CF &);
BlockRetStatus block_339(CF &);
BlockRetStatus block_340(CF &);
BlockRetStatus block_341(CF &);
BlockRetStatus block_342(CF &);
BlockRetStatus block_343(CF &);
BlockRetStatus block_344(CF &);
BlockRetStatus block_345(CF &);
BlockRetStatus block_346(CF &);
BlockRetStatus block_347(CF &);
BlockRetStatus block_348(CF &);
BlockRetStatus block_349(CF &);
BlockRetStatus block_350(CF &);
BlockRetStatus block_351(CF &);
BlockRetStatus block_352(CF &);
BlockRetStatus block_353(CF &);
BlockRetStatus block_354(CF &);
BlockRetStatus block_355(CF &);
BlockRetStatus block_356(CF &);
BlockRetStatus block_357(CF &);
BlockRetStatus block_358(CF &);
BlockRetStatus block_359(CF &);
BlockRetStatus block_360(CF &);
BlockRetStatus block_361(CF &);
BlockRetStatus block_362(CF &);
BlockRetStatus block_363(CF &);
BlockRetStatus block_364(CF &);
BlockRetStatus block_365(CF &);
BlockRetStatus block_366(CF &);
BlockRetStatus block_367(CF &);
BlockRetStatus block_368(CF &);
BlockRetStatus block_369(CF &);
BlockRetStatus block_370(CF &);
BlockRetStatus block_371(CF &);
BlockRetStatus block_372(CF &);
BlockRetStatus block_373(CF &);
BlockRetStatus block_374(CF &);
BlockRetStatus block_375(CF &);
BlockRetStatus block_376(CF &);
BlockRetStatus block_377(CF &);
BlockRetStatus block_378(CF &);
BlockRetStatus block_379(CF &);
BlockRetStatus block_380(CF &);
BlockRetStatus block_381(CF &);
BlockRetStatus block_382(CF &);
BlockRetStatus block_383(CF &);
BlockRetStatus block_384(CF &);
BlockRetStatus block_385(CF &);
BlockRetStatus block_386(CF &);
BlockRetStatus block_387(CF &);
BlockRetStatus block_388(CF &);
BlockRetStatus block_389(CF &);
BlockRetStatus block_390(CF &);
BlockRetStatus block_391(CF &);
BlockRetStatus block_392(CF &);
BlockRetStatus block_393(CF &);
BlockRetStatus block_394(CF &);
BlockRetStatus block_395(CF &);
BlockRetStatus block_396(CF &);
BlockRetStatus block_397(CF &);
BlockRetStatus block_398(CF &);
BlockRetStatus block_399(CF &);
BlockRetStatus block_400(CF &);
BlockRetStatus block_401(CF &);
BlockRetStatus block_402(CF &);
BlockRetStatus block_403(CF &);
BlockRetStatus block_404(CF &);
BlockRetStatus block_405(CF &);
BlockRetStatus block_406(CF &);
void init_chunk_0(BlocksAppender add)
{
		bool ok=true;

	ok=ok && (add(block_0)==0);
	ok=ok && (add(block_1)==1);
	ok=ok && (add(block_2)==2);
	ok=ok && (add(block_3)==3);
	ok=ok && (add(block_4)==4);
	ok=ok && (add(block_5)==5);
	ok=ok && (add(block_6)==6);
	ok=ok && (add(block_7)==7);
	ok=ok && (add(block_8)==8);
	ok=ok && (add(block_9)==9);
	ok=ok && (add(block_10)==10);
	ok=ok && (add(block_11)==11);
	ok=ok && (add(block_12)==12);
	ok=ok && (add(block_13)==13);
	ok=ok && (add(block_14)==14);
	ok=ok && (add(block_15)==15);
	ok=ok && (add(block_16)==16);
	ok=ok && (add(block_17)==17);
	ok=ok && (add(block_18)==18);
	ok=ok && (add(block_19)==19);
	ok=ok && (add(block_20)==20);
	ok=ok && (add(block_21)==21);
	ok=ok && (add(block_22)==22);
	ok=ok && (add(block_23)==23);
	ok=ok && (add(block_24)==24);
	ok=ok && (add(block_25)==25);
	ok=ok && (add(block_26)==26);
	ok=ok && (add(block_27)==27);
	ok=ok && (add(block_28)==28);
	ok=ok && (add(block_29)==29);
	ok=ok && (add(block_30)==30);
	ok=ok && (add(block_31)==31);
	ok=ok && (add(block_32)==32);
	ok=ok && (add(block_33)==33);
	ok=ok && (add(block_34)==34);
	ok=ok && (add(block_35)==35);
	ok=ok && (add(block_36)==36);
	ok=ok && (add(block_37)==37);
	ok=ok && (add(block_38)==38);
	ok=ok && (add(block_39)==39);
	ok=ok && (add(block_40)==40);
	ok=ok && (add(block_41)==41);
	ok=ok && (add(block_42)==42);
	ok=ok && (add(block_43)==43);
	ok=ok && (add(block_44)==44);
	ok=ok && (add(block_45)==45);
	ok=ok && (add(block_46)==46);
	ok=ok && (add(block_47)==47);
	ok=ok && (add(block_48)==48);
	ok=ok && (add(block_49)==49);
	ok=ok && (add(block_50)==50);
	ok=ok && (add(block_51)==51);
	ok=ok && (add(block_52)==52);
	ok=ok && (add(block_53)==53);
	ok=ok && (add(block_54)==54);
	ok=ok && (add(block_55)==55);
	ok=ok && (add(block_56)==56);
	ok=ok && (add(block_57)==57);
	ok=ok && (add(block_58)==58);
	ok=ok && (add(block_59)==59);
	ok=ok && (add(block_60)==60);
	ok=ok && (add(block_61)==61);
	ok=ok && (add(block_62)==62);
	ok=ok && (add(block_63)==63);
	ok=ok && (add(block_64)==64);
	ok=ok && (add(block_65)==65);
	ok=ok && (add(block_66)==66);
	ok=ok && (add(block_67)==67);
	ok=ok && (add(block_68)==68);
	ok=ok && (add(block_69)==69);
	ok=ok && (add(block_70)==70);
	ok=ok && (add(block_71)==71);
	ok=ok && (add(block_72)==72);
	ok=ok && (add(block_73)==73);
	ok=ok && (add(block_74)==74);
	ok=ok && (add(block_75)==75);
	ok=ok && (add(block_76)==76);
	ok=ok && (add(block_77)==77);
	ok=ok && (add(block_78)==78);
	ok=ok && (add(block_79)==79);
	ok=ok && (add(block_80)==80);
	ok=ok && (add(block_81)==81);
	ok=ok && (add(block_82)==82);
	ok=ok && (add(block_83)==83);
	ok=ok && (add(block_84)==84);
	ok=ok && (add(block_85)==85);
	ok=ok && (add(block_86)==86);
	ok=ok && (add(block_87)==87);
	ok=ok && (add(block_88)==88);
	ok=ok && (add(block_89)==89);
	ok=ok && (add(block_90)==90);
	ok=ok && (add(block_91)==91);
	ok=ok && (add(block_92)==92);
	ok=ok && (add(block_93)==93);
	ok=ok && (add(block_94)==94);
	ok=ok && (add(block_95)==95);
	ok=ok && (add(block_96)==96);
	ok=ok && (add(block_97)==97);
	ok=ok && (add(block_98)==98);
	ok=ok && (add(block_99)==99);

	assert(ok);
}
void init_chunk_1(BlocksAppender add)
{
		bool ok=true;

	ok=ok && (add(block_100)==100);
	ok=ok && (add(block_101)==101);
	ok=ok && (add(block_102)==102);
	ok=ok && (add(block_103)==103);
	ok=ok && (add(block_104)==104);
	ok=ok && (add(block_105)==105);
	ok=ok && (add(block_106)==106);
	ok=ok && (add(block_107)==107);
	ok=ok && (add(block_108)==108);
	ok=ok && (add(block_109)==109);
	ok=ok && (add(block_110)==110);
	ok=ok && (add(block_111)==111);
	ok=ok && (add(block_112)==112);
	ok=ok && (add(block_113)==113);
	ok=ok && (add(block_114)==114);
	ok=ok && (add(block_115)==115);
	ok=ok && (add(block_116)==116);
	ok=ok && (add(block_117)==117);
	ok=ok && (add(block_118)==118);
	ok=ok && (add(block_119)==119);
	ok=ok && (add(block_120)==120);
	ok=ok && (add(block_121)==121);
	ok=ok && (add(block_122)==122);
	ok=ok && (add(block_123)==123);
	ok=ok && (add(block_124)==124);
	ok=ok && (add(block_125)==125);
	ok=ok && (add(block_126)==126);
	ok=ok && (add(block_127)==127);
	ok=ok && (add(block_128)==128);
	ok=ok && (add(block_129)==129);
	ok=ok && (add(block_130)==130);
	ok=ok && (add(block_131)==131);
	ok=ok && (add(block_132)==132);
	ok=ok && (add(block_133)==133);
	ok=ok && (add(block_134)==134);
	ok=ok && (add(block_135)==135);
	ok=ok && (add(block_136)==136);
	ok=ok && (add(block_137)==137);
	ok=ok && (add(block_138)==138);
	ok=ok && (add(block_139)==139);
	ok=ok && (add(block_140)==140);
	ok=ok && (add(block_141)==141);
	ok=ok && (add(block_142)==142);
	ok=ok && (add(block_143)==143);
	ok=ok && (add(block_144)==144);
	ok=ok && (add(block_145)==145);
	ok=ok && (add(block_146)==146);
	ok=ok && (add(block_147)==147);
	ok=ok && (add(block_148)==148);
	ok=ok && (add(block_149)==149);
	ok=ok && (add(block_150)==150);
	ok=ok && (add(block_151)==151);
	ok=ok && (add(block_152)==152);
	ok=ok && (add(block_153)==153);
	ok=ok && (add(block_154)==154);
	ok=ok && (add(block_155)==155);
	ok=ok && (add(block_156)==156);
	ok=ok && (add(block_157)==157);
	ok=ok && (add(block_158)==158);
	ok=ok && (add(block_159)==159);
	ok=ok && (add(block_160)==160);
	ok=ok && (add(block_161)==161);
	ok=ok && (add(block_162)==162);
	ok=ok && (add(block_163)==163);
	ok=ok && (add(block_164)==164);
	ok=ok && (add(block_165)==165);
	ok=ok && (add(block_166)==166);
	ok=ok && (add(block_167)==167);
	ok=ok && (add(block_168)==168);
	ok=ok && (add(block_169)==169);
	ok=ok && (add(block_170)==170);
	ok=ok && (add(block_171)==171);
	ok=ok && (add(block_172)==172);
	ok=ok && (add(block_173)==173);
	ok=ok && (add(block_174)==174);
	ok=ok && (add(block_175)==175);
	ok=ok && (add(block_176)==176);
	ok=ok && (add(block_177)==177);
	ok=ok && (add(block_178)==178);
	ok=ok && (add(block_179)==179);
	ok=ok && (add(block_180)==180);
	ok=ok && (add(block_181)==181);
	ok=ok && (add(block_182)==182);
	ok=ok && (add(block_183)==183);
	ok=ok && (add(block_184)==184);
	ok=ok && (add(block_185)==185);
	ok=ok && (add(block_186)==186);
	ok=ok && (add(block_187)==187);
	ok=ok && (add(block_188)==188);
	ok=ok && (add(block_189)==189);
	ok=ok && (add(block_190)==190);
	ok=ok && (add(block_191)==191);
	ok=ok && (add(block_192)==192);
	ok=ok && (add(block_193)==193);
	ok=ok && (add(block_194)==194);
	ok=ok && (add(block_195)==195);
	ok=ok && (add(block_196)==196);
	ok=ok && (add(block_197)==197);
	ok=ok && (add(block_198)==198);
	ok=ok && (add(block_199)==199);

	assert(ok);
}
void init_chunk_2(BlocksAppender add)
{
		bool ok=true;

	ok=ok && (add(block_200)==200);
	ok=ok && (add(block_201)==201);
	ok=ok && (add(block_202)==202);
	ok=ok && (add(block_203)==203);
	ok=ok && (add(block_204)==204);
	ok=ok && (add(block_205)==205);
	ok=ok && (add(block_206)==206);
	ok=ok && (add(block_207)==207);
	ok=ok && (add(block_208)==208);
	ok=ok && (add(block_209)==209);
	ok=ok && (add(block_210)==210);
	ok=ok && (add(block_211)==211);
	ok=ok && (add(block_212)==212);
	ok=ok && (add(block_213)==213);
	ok=ok && (add(block_214)==214);
	ok=ok && (add(block_215)==215);
	ok=ok && (add(block_216)==216);
	ok=ok && (add(block_217)==217);
	ok=ok && (add(block_218)==218);
	ok=ok && (add(block_219)==219);
	ok=ok && (add(block_220)==220);
	ok=ok && (add(block_221)==221);
	ok=ok && (add(block_222)==222);
	ok=ok && (add(block_223)==223);
	ok=ok && (add(block_224)==224);
	ok=ok && (add(block_225)==225);
	ok=ok && (add(block_226)==226);
	ok=ok && (add(block_227)==227);
	ok=ok && (add(block_228)==228);
	ok=ok && (add(block_229)==229);
	ok=ok && (add(block_230)==230);
	ok=ok && (add(block_231)==231);
	ok=ok && (add(block_232)==232);
	ok=ok && (add(block_233)==233);
	ok=ok && (add(block_234)==234);
	ok=ok && (add(block_235)==235);
	ok=ok && (add(block_236)==236);
	ok=ok && (add(block_237)==237);
	ok=ok && (add(block_238)==238);
	ok=ok && (add(block_239)==239);
	ok=ok && (add(block_240)==240);
	ok=ok && (add(block_241)==241);
	ok=ok && (add(block_242)==242);
	ok=ok && (add(block_243)==243);
	ok=ok && (add(block_244)==244);
	ok=ok && (add(block_245)==245);
	ok=ok && (add(block_246)==246);
	ok=ok && (add(block_247)==247);
	ok=ok && (add(block_248)==248);
	ok=ok && (add(block_249)==249);
	ok=ok && (add(block_250)==250);
	ok=ok && (add(block_251)==251);
	ok=ok && (add(block_252)==252);
	ok=ok && (add(block_253)==253);
	ok=ok && (add(block_254)==254);
	ok=ok && (add(block_255)==255);
	ok=ok && (add(block_256)==256);
	ok=ok && (add(block_257)==257);
	ok=ok && (add(block_258)==258);
	ok=ok && (add(block_259)==259);
	ok=ok && (add(block_260)==260);
	ok=ok && (add(block_261)==261);
	ok=ok && (add(block_262)==262);
	ok=ok && (add(block_263)==263);
	ok=ok && (add(block_264)==264);
	ok=ok && (add(block_265)==265);
	ok=ok && (add(block_266)==266);
	ok=ok && (add(block_267)==267);
	ok=ok && (add(block_268)==268);
	ok=ok && (add(block_269)==269);
	ok=ok && (add(block_270)==270);
	ok=ok && (add(block_271)==271);
	ok=ok && (add(block_272)==272);
	ok=ok && (add(block_273)==273);
	ok=ok && (add(block_274)==274);
	ok=ok && (add(block_275)==275);
	ok=ok && (add(block_276)==276);
	ok=ok && (add(block_277)==277);
	ok=ok && (add(block_278)==278);
	ok=ok && (add(block_279)==279);
	ok=ok && (add(block_280)==280);
	ok=ok && (add(block_281)==281);
	ok=ok && (add(block_282)==282);
	ok=ok && (add(block_283)==283);
	ok=ok && (add(block_284)==284);
	ok=ok && (add(block_285)==285);
	ok=ok && (add(block_286)==286);
	ok=ok && (add(block_287)==287);
	ok=ok && (add(block_288)==288);
	ok=ok && (add(block_289)==289);
	ok=ok && (add(block_290)==290);
	ok=ok && (add(block_291)==291);
	ok=ok && (add(block_292)==292);
	ok=ok && (add(block_293)==293);
	ok=ok && (add(block_294)==294);
	ok=ok && (add(block_295)==295);
	ok=ok && (add(block_296)==296);
	ok=ok && (add(block_297)==297);
	ok=ok && (add(block_298)==298);
	ok=ok && (add(block_299)==299);

	assert(ok);
}
void init_chunk_3(BlocksAppender add)
{
		bool ok=true;

	ok=ok && (add(block_300)==300);
	ok=ok && (add(block_301)==301);
	ok=ok && (add(block_302)==302);
	ok=ok && (add(block_303)==303);
	ok=ok && (add(block_304)==304);
	ok=ok && (add(block_305)==305);
	ok=ok && (add(block_306)==306);
	ok=ok && (add(block_307)==307);
	ok=ok && (add(block_308)==308);
	ok=ok && (add(block_309)==309);
	ok=ok && (add(block_310)==310);
	ok=ok && (add(block_311)==311);
	ok=ok && (add(block_312)==312);
	ok=ok && (add(block_313)==313);
	ok=ok && (add(block_314)==314);
	ok=ok && (add(block_315)==315);
	ok=ok && (add(block_316)==316);
	ok=ok && (add(block_317)==317);
	ok=ok && (add(block_318)==318);
	ok=ok && (add(block_319)==319);
	ok=ok && (add(block_320)==320);
	ok=ok && (add(block_321)==321);
	ok=ok && (add(block_322)==322);
	ok=ok && (add(block_323)==323);
	ok=ok && (add(block_324)==324);
	ok=ok && (add(block_325)==325);
	ok=ok && (add(block_326)==326);
	ok=ok && (add(block_327)==327);
	ok=ok && (add(block_328)==328);
	ok=ok && (add(block_329)==329);
	ok=ok && (add(block_330)==330);
	ok=ok && (add(block_331)==331);
	ok=ok && (add(block_332)==332);
	ok=ok && (add(block_333)==333);
	ok=ok && (add(block_334)==334);
	ok=ok && (add(block_335)==335);
	ok=ok && (add(block_336)==336);
	ok=ok && (add(block_337)==337);
	ok=ok && (add(block_338)==338);
	ok=ok && (add(block_339)==339);
	ok=ok && (add(block_340)==340);
	ok=ok && (add(block_341)==341);
	ok=ok && (add(block_342)==342);
	ok=ok && (add(block_343)==343);
	ok=ok && (add(block_344)==344);
	ok=ok && (add(block_345)==345);
	ok=ok && (add(block_346)==346);
	ok=ok && (add(block_347)==347);
	ok=ok && (add(block_348)==348);
	ok=ok && (add(block_349)==349);
	ok=ok && (add(block_350)==350);
	ok=ok && (add(block_351)==351);
	ok=ok && (add(block_352)==352);
	ok=ok && (add(block_353)==353);
	ok=ok && (add(block_354)==354);
	ok=ok && (add(block_355)==355);
	ok=ok && (add(block_356)==356);
	ok=ok && (add(block_357)==357);
	ok=ok && (add(block_358)==358);
	ok=ok && (add(block_359)==359);
	ok=ok && (add(block_360)==360);
	ok=ok && (add(block_361)==361);
	ok=ok && (add(block_362)==362);
	ok=ok && (add(block_363)==363);
	ok=ok && (add(block_364)==364);
	ok=ok && (add(block_365)==365);
	ok=ok && (add(block_366)==366);
	ok=ok && (add(block_367)==367);
	ok=ok && (add(block_368)==368);
	ok=ok && (add(block_369)==369);
	ok=ok && (add(block_370)==370);
	ok=ok && (add(block_371)==371);
	ok=ok && (add(block_372)==372);
	ok=ok && (add(block_373)==373);
	ok=ok && (add(block_374)==374);
	ok=ok && (add(block_375)==375);
	ok=ok && (add(block_376)==376);
	ok=ok && (add(block_377)==377);
	ok=ok && (add(block_378)==378);
	ok=ok && (add(block_379)==379);
	ok=ok && (add(block_380)==380);
	ok=ok && (add(block_381)==381);
	ok=ok && (add(block_382)==382);
	ok=ok && (add(block_383)==383);
	ok=ok && (add(block_384)==384);
	ok=ok && (add(block_385)==385);
	ok=ok && (add(block_386)==386);
	ok=ok && (add(block_387)==387);
	ok=ok && (add(block_388)==388);
	ok=ok && (add(block_389)==389);
	ok=ok && (add(block_390)==390);
	ok=ok && (add(block_391)==391);
	ok=ok && (add(block_392)==392);
	ok=ok && (add(block_393)==393);
	ok=ok && (add(block_394)==394);
	ok=ok && (add(block_395)==395);
	ok=ok && (add(block_396)==396);
	ok=ok && (add(block_397)==397);
	ok=ok && (add(block_398)==398);
	ok=ok && (add(block_399)==399);

	assert(ok);
}
void init_chunk_4(BlocksAppender add)
{
		bool ok=true;

	ok=ok && (add(block_400)==400);
	ok=ok && (add(block_401)==401);
	ok=ok && (add(block_402)==402);
	ok=ok && (add(block_403)==403);
	ok=ok && (add(block_404)==404);
	ok=ok && (add(block_405)==405);
	ok=ok && (add(block_406)==406);

	assert(ok);
}
extern "C" void init_blocks(BlocksAppender add)
{
		init_chunk_0(add);
		init_chunk_1(add);
		init_chunk_2(add);
		init_chunk_3(add);
		init_chunk_4(add);
}

